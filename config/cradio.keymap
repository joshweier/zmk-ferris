/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
	combos {
		compatible = "zmk,combos";
		combo_shift {
		    timeout-ms = <50>;
		    key-positions = <31 32>;
		    bindings = <&caps_word>;
		};
		combo_tab {
		    timeout-ms = <50>;
		    key-positions = <0 9>;
		    bindings = <&kp TAB>;
		};
		combo_enter {
		    timeout-ms = <50>;
		    key-positions = <10 19>;
		    bindings = <&kp RET>;
		};
		combo_enter_r {
		    timeout-ms = <50>;
		    key-positions = <16 17>;
		    bindings = <&kp RET>;
		};
		combo_sys {
		    timeout-ms = <50>;
		    key-positions = <20 29>;
		    bindings = <&to 3>;
		};
	    };

	behaviors {
		hm: homerow_mods {
		    compatible = "zmk,behavior-hold-tap";
		    label = "HOMEROW_MODS";
		    #binding-cells = <2>;
		    tapping-term-ms = <180>;
		    quick_tap_ms = <0>;
		    flavor = "tap-preferred";
		    bindings = <&kp>, <&kp>;
		};
		ltf: layer_tap_fast {
		    compatible = "zmk,behavior-hold-tap";
		    label = "LAYER TAP FAST";
		    #binding-cells = <2>;
		    tapping-term-ms = <125>;
		    quick_tap_ms = <200>;
		    flavor = "tap-preferred";
		    bindings = <&mo>, <&kp>;
		};
		td_par: tdpar {
		    compatible = "zmk,behavior-tap-dance";
		    label = "TDPAR";
		    #binding-cells = <0>;
		    tapping-term-ms = <150>;
		    bindings = <&kp LPAR>, <&kp RPAR>;
		};
		td_brc: tdbrc {
		    compatible = "zmk,behavior-tap-dance";
		    label = "TDBRC";
		    #binding-cells = <0>;
		    tapping-term-ms = <150>;
		    bindings = <&kp LBRC>, <&kp RBRC>;
		};
		td_bkt: tdbkt {
		    compatible = "zmk,behavior-tap-dance";
		    label = "TDBKT";
		    #binding-cells = <0>;
		    tapping-term-ms = <150>;
		    bindings = <&kp LBKT>, <&kp RBKT>;
		};
		td_apos: tdapos {
		    compatible = "zmk,behavior-tap-dance";
		    label = "TDAPOS";
		    #binding-cells = <0>;
		    tapping-term-ms = <150>;
		    bindings = <&kp APOS>, <&kp PIPE>;
		};
	};

	macros {
		ZMK_MACRO(right_arrow,
			bindings = <&macro_tap &kp MINUS &kp GT>;
		)

		ZMK_MACRO(left_arrow,
			bindings = <&macro_tap &kp LT &kp MINUS>;
		)
	};

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q &kp W &kp E &kp R &kp T     &kp Y &kp U &kp I &kp O &kp P
                &hm LCTL A &hm LALT S &hm LG(LC(LALT)) D &hm LSHFT F &hm LGUI G     &hm RGUI H &hm RSHFT J &hm RG(RC(RALT)) K &hm RALT L &hm RCTRL SEMI
                &kp Z &kp X &kp C &kp V &kp B     &kp N &kp M &kp COMMA &kp DOT &kp FSLH
                         &ltf 2 ESC &kp SPACE     &kp BSPC &mo 1
            >;
        };

        lower_layer {
            bindings = <
   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5   &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp F11 
   &kp N6 &kp N7 &kp N8 &kp N9 &kp N0   &kp HOME &kp PGDN &kp PGUP &kp END &kp F12 
                       &trans &kp TAB   &trans &trans 
            >;
        };

        raise_layer {
            bindings = <
&kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp KP_MULTIPLY &td_par &kp TILDE 
 &none &none &none &left_arrow &right_arrow   &kp MINUS &kp EQUAL &kp DQT &td_brc &kp APOS 
            &none &none &none &none &kp DEL   &kp UNDER &kp PLUS &kp SQT &td_bkt &kp BSLH 
                             &trans &kp TAB   &trans &trans 
            >;
        };

        sys_layer {
            bindings = <
             &none &none &none &none &none   &none &none &none &none &none 
&kp C_PREV &kp C_PP &kp C_NEXT &none &none   &none &none &none &none &none
        &bt BT_CLR &none &none &none &none   &none &none &none &none &none
                           &to 0 &to 0   &to 0 &to 0
            >;
        };

    };
};
