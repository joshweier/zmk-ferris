/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "includes/combos.dtsi"
#include "includes/behaviors_homerow.dtsi"
#include "includes/behaviors_misc.dtsi"
#include "includes/behaviors_tapdance.dtsi"
#include "includes/macros.dtsi"

&sk {  
    release-after-ms = <900>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&num_word {
    layers = <2>;
    continue-list = <
	BACKSPACE DELETE DOT COMMA
	SLASH ASTERISK PLUS MINUS EQUAL DOLLAR
	RS(SPACE)
    >;
    ignore-modifiers;  // modifiers don't deactivate the layer
};

/ {

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q &kp W &kp E &kp R &kp T     &kp Y &kp U &kp I &kp O &kp P
&hm_l LCTL A &hm_l LALT S &kp D &hm_l LG(LC(LALT)) F &hm_l LGUI G     &hm_r RGUI H &hm_r RG(RC(RALT)) J &kp K &hm_r RALT L &hm_r RCTRL SEMI
                &kp Z &kp X &kp C &kp V &kp B     &kp N &kp M &kp COMMA &kp DOT &kp FSLH
                         &mo 1 &kp SPACE     &smn 2 0 &sm 
            >;
        };

        nav_layer {
            bindings = <
   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5   &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
   &none &none &none &none &none   &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp F11 
   &none &none &none &none &none   &kp HOME &kp PGDN &kp PGUP &kp END &kp F12 
                       &to 0 &kp TAB   &to 0 &to 0 
            >;
        };

        num_layer {
            bindings = <
   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 
   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp F11 
   &kp N6 &kp N7 &kp N8 &kp N9 &kp N0   &kp DOT &kp COLON &kp FSLH &kp EQUAL &kp F12 
                        &to 0 &to 0   &to 0 &to 0 
            >;
        };

        sys_layer {
            bindings = <
             &none &none &none &none &none   &none &none &none &none &bt BT_CLR 
&kp C_PREV &kp C_PP &kp C_NEXT &none &none   &none &none &none &none &none
             &none &none &none &none &none   &none &none &none &none &none
                               &to 0 &to 0   &to 0 &to 0
            >;
        };

    };
};
